{
  "contractName": "Controllable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "controller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "ControllerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "controllers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"ControllerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/utils/Controllable.sol\":\"Controllable\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"project:/contracts/utils/Controllable.sol\":{\"keccak256\":\"0x1ee410147432cf733e4a3cab74095006eb74fa08b2c34c8f20fa597390f828d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c731c820e9a12503079e4742e9df343e6c06be7a550de7573dc5f7a1ed93ee0\",\"dweb:/ipfs/QmYYJeRENdT3xcVJR41wBRnDfnsPYcdy15n7ke2YiDKPAr\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103748061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063da8c229e14610086578063e0dba60f146100b9578063f2fde38b146100cc575b600080fd5b6100646100df565b005b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100a96100943660046102ae565b60016020526000908152604090205460ff1681565b604051901515815260200161007d565b6100646100c73660046102cf565b61011e565b6100646100da3660046102ae565b6101a7565b6000546001600160a01b031633146101125760405162461bcd60e51b815260040161010990610309565b60405180910390fd5b61011c6000610242565b565b6000546001600160a01b031633146101485760405162461bcd60e51b815260040161010990610309565b6001600160a01b038216600081815260016020908152604091829020805460ff191685151590811790915591519182527f4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf87910160405180910390a25050565b6000546001600160a01b031633146101d15760405162461bcd60e51b815260040161010990610309565b6001600160a01b0381166102365760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610109565b61023f81610242565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146102a957600080fd5b919050565b6000602082840312156102bf578081fd5b6102c882610292565b9392505050565b600080604083850312156102e1578081fd5b6102ea83610292565b9150602083013580151581146102fe578182fd5b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea264697066735822122070f3fc3a494bfea4e8e28d3ba5228542f38fad1726eb483e1744734f80cb0cf464736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063da8c229e14610086578063e0dba60f146100b9578063f2fde38b146100cc575b600080fd5b6100646100df565b005b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100a96100943660046102ae565b60016020526000908152604090205460ff1681565b604051901515815260200161007d565b6100646100c73660046102cf565b61011e565b6100646100da3660046102ae565b6101a7565b6000546001600160a01b031633146101125760405162461bcd60e51b815260040161010990610309565b60405180910390fd5b61011c6000610242565b565b6000546001600160a01b031633146101485760405162461bcd60e51b815260040161010990610309565b6001600160a01b038216600081815260016020908152604091829020805460ff191685151590811790915591519182527f4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf87910160405180910390a25050565b6000546001600160a01b031633146101d15760405162461bcd60e51b815260040161010990610309565b6001600160a01b0381166102365760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610109565b61023f81610242565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146102a957600080fd5b919050565b6000602082840312156102bf578081fd5b6102c882610292565b9392505050565b600080604083850312156102e1578081fd5b6102ea83610292565b9150602083013580151581146102fe578182fd5b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea264697066735822122070f3fc3a494bfea4e8e28d3ba5228542f38fad1726eb483e1744734f80cb0cf464736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1930:35",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:35",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:35"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:35"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:35"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:35",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:35",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:35"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:35"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:35",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:35"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:35"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:35"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:35",
                "type": ""
              }
            ],
            "src": "14:173:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:126:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "317:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "325:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "272:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "343:39:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "372:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "353:18:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "353:29:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "343:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:35",
                "type": ""
              }
            ],
            "src": "192:196:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "477:283:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "523:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "532:6:35"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "540:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "525:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "525:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "525:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "498:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "507:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "494:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "494:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "519:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "490:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "490:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "487:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "558:39:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "587:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "568:18:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "568:29:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "558:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "606:45:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "636:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "647:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "632:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "632:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "619:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "619:32:35"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "610:5:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "704:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "713:6:35"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "721:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "706:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "706:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "706:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "673:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "694:5:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "687:6:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "687:13:35"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "680:6:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "680:21:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "670:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "670:32:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "663:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "663:40:35"
                  },
                  "nodeType": "YulIf",
                  "src": "660:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "739:15:35",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "749:5:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "739:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "435:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "446:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "458:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "466:6:35",
                "type": ""
              }
            ],
            "src": "393:367:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "866:102:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "876:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "888:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "899:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "884:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "884:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "876:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "918:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "933:6:35"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "949:3:35",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "954:1:35",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "945:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "945:11:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "958:1:35",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "941:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "941:19:35"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "929:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "929:32:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "911:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "911:51:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "911:51:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "835:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "846:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "857:4:35",
                "type": ""
              }
            ],
            "src": "765:203:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1068:92:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1078:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1090:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1101:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1086:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1086:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1078:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1120:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1145:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1138:6:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1138:14:35"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1131:6:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1131:22:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1113:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1113:41:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1113:41:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1037:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1048:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1059:4:35",
                "type": ""
              }
            ],
            "src": "973:187:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1339:228:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1356:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1367:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1349:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1349:21:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1349:21:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1390:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1401:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1386:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1386:18:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1406:2:35",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1379:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1379:30:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1379:30:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1429:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1440:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1425:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1425:18:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1445:34:35",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1418:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1418:62:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1418:62:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1500:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1511:2:35",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1496:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1496:18:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1516:8:35",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1489:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1489:36:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1489:36:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1534:27:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1546:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1557:3:35",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1542:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1542:19:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1534:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1316:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1330:4:35",
                "type": ""
              }
            ],
            "src": "1165:402:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1746:182:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1763:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1774:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1756:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1756:21:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1756:21:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1797:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1808:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1793:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1793:18:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1813:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1786:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1786:30:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1786:30:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1836:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1847:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1832:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1832:18:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1852:34:35",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1825:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1825:62:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1825:62:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1896:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1908:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1919:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1904:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1904:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1896:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1723:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1737:4:35",
                "type": ""
              }
            ],
            "src": "1572:356:35"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value1, value1) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 35,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "116:525:34:-:0;;;;;;;;;;;;-1:-1:-1;867:23:14;666:10:20;867:9:14;:23::i;:::-;116:525:34;;2041:169:14;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:14;;;-1:-1:-1;;;;;;2131:17:14;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;116:525:34:-;;;;;;;",
  "deployedSourceMap": "116:525:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1605:92:14;;;:::i;:::-;;973:85;1019:7;1045:6;973:85;;-1:-1:-1;;;;;1045:6:14;;;911:51:35;;899:2;884:18;973:85:14;;;;;;;;156:43:34;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1138:14:35;;1131:22;1113:41;;1101:2;1086:18;156:43:34;1068:92:35;458:180:34;;;;;;:::i;:::-;;:::i;1846:189:14:-;;;;;;:::i;:::-;;:::i;1605:92::-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:14;666:10:20;1185:23:14;1177:68;;;;-1:-1:-1;;;1177:68:14;;;;;;;:::i;:::-;;;;;;;;;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;458:180:34:-;1019:7:14;1045:6;-1:-1:-1;;;;;1045:6:14;666:10:20;1185:23:14;1177:68;;;;-1:-1:-1;;;1177:68:14;;;;;;;:::i;:::-;-1:-1:-1;;;;;543:23:34;::::1;;::::0;;;:11:::1;:23;::::0;;;;;;;;:33;;-1:-1:-1;;543:33:34::1;::::0;::::1;;::::0;;::::1;::::0;;;592:38;;1113:41:35;;;592:38:34::1;::::0;1086:18:35;592:38:34::1;;;;;;;458:180:::0;;:::o;1846:189:14:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:14;666:10:20;1185:23:14;1177:68;;;;-1:-1:-1;;;1177:68:14;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:14;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:14;;1367:2:35;1926:73:14::1;::::0;::::1;1349:21:35::0;1406:2;1386:18;;;1379:30;1445:34;1425:18;;;1418:62;-1:-1:-1;;;1496:18:35;;;1489:36;1542:19;;1926:73:14::1;1339:228:35::0;1926:73:14::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;2041:169::-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:14;;;-1:-1:-1;;;;;;2131:17:14;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;14:173:35:-;82:20;;-1:-1:-1;;;;;131:31:35;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;:::-;343:39;262:126;-1:-1:-1;;;262:126:35:o;393:367::-;458:6;466;519:2;507:9;498:7;494:23;490:32;487:2;;;540:6;532;525:22;487:2;568:29;587:9;568:29;:::i;:::-;558:39;;647:2;636:9;632:18;619:32;694:5;687:13;680:21;673:5;670:32;660:2;;721:6;713;706:22;660:2;749:5;739:15;;;477:283;;;;;:::o;1572:356::-;1774:2;1756:21;;;1793:18;;;1786:30;1852:34;1847:2;1832:18;;1825:62;1919:2;1904:18;;1746:182::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract Controllable is Ownable {\r\n    mapping(address => bool) public controllers;\r\n\r\n    event ControllerChanged(address indexed controller, bool enabled);\r\n\r\n    modifier onlyController {\r\n        require(\r\n            controllers[msg.sender],\r\n            \"Controllable: Caller is not a controller\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    function setController(address controller, bool enabled) public onlyOwner {\r\n        controllers[controller] = enabled;\r\n        emit ControllerChanged(controller, enabled);\r\n    }\r\n}",
  "sourcePath": "D:\\Posao-Stefan\\Stefan-razno\\Blockchain\\Thetaboard\\core-contracts\\contracts\\utils\\Controllable.sol",
  "ast": {
    "absolutePath": "project:/contracts/utils/Controllable.sol",
    "exportedSymbols": {
      "Context": [
        5562
      ],
      "Controllable": [
        8220
      ],
      "Ownable": [
        4266
      ]
    },
    "id": 8221,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8173,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:34"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 8174,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8221,
        "sourceUnit": 4267,
        "src": "60:52:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8175,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4266,
              "src": "141:7:34"
            },
            "id": 8176,
            "nodeType": "InheritanceSpecifier",
            "src": "141:7:34"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8220,
        "linearizedBaseContracts": [
          8220,
          4266,
          5562
        ],
        "name": "Controllable",
        "nameLocation": "125:12:34",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "da8c229e",
            "id": 8180,
            "mutability": "mutable",
            "name": "controllers",
            "nameLocation": "188:11:34",
            "nodeType": "VariableDeclaration",
            "scope": 8220,
            "src": "156:43:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 8179,
              "keyType": {
                "id": 8177,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "164:7:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "156:24:34",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 8178,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "175:4:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 8186,
            "name": "ControllerChanged",
            "nameLocation": "214:17:34",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8182,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "248:10:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 8186,
                  "src": "232:26:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "232:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8184,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "enabled",
                  "nameLocation": "265:7:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 8186,
                  "src": "260:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8183,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "231:42:34"
            },
            "src": "208:66:34"
          },
          {
            "body": {
              "id": 8197,
              "nodeType": "Block",
              "src": "306:144:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 8189,
                          "name": "controllers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8180,
                          "src": "339:11:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 8192,
                        "indexExpression": {
                          "expression": {
                            "id": 8190,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "351:3:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "351:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "339:23:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e74726f6c6c61626c653a2043616c6c6572206973206e6f74206120636f6e74726f6c6c6572",
                        "id": 8193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "377:42:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a494915be969f0305371ebdb09944c6f39346fa8227994f38a7231f6aafbd7b",
                          "typeString": "literal_string \"Controllable: Caller is not a controller\""
                        },
                        "value": "Controllable: Caller is not a controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a494915be969f0305371ebdb09944c6f39346fa8227994f38a7231f6aafbd7b",
                          "typeString": "literal_string \"Controllable: Caller is not a controller\""
                        }
                      ],
                      "id": 8188,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "317:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "317:113:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8195,
                  "nodeType": "ExpressionStatement",
                  "src": "317:113:34"
                },
                {
                  "id": 8196,
                  "nodeType": "PlaceholderStatement",
                  "src": "441:1:34"
                }
              ]
            },
            "id": 8198,
            "name": "onlyController",
            "nameLocation": "291:14:34",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 8187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "306:0:34"
            },
            "src": "282:168:34",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8218,
              "nodeType": "Block",
              "src": "532:106:34",
              "statements": [
                {
                  "expression": {
                    "id": 8211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8207,
                        "name": "controllers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8180,
                        "src": "543:11:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 8209,
                      "indexExpression": {
                        "id": 8208,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8200,
                        "src": "555:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "543:23:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8210,
                      "name": "enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8202,
                      "src": "569:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "543:33:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8212,
                  "nodeType": "ExpressionStatement",
                  "src": "543:33:34"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8214,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8200,
                        "src": "610:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8215,
                        "name": "enabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8202,
                        "src": "622:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8213,
                      "name": "ControllerChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8186,
                      "src": "592:17:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 8216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "592:38:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8217,
                  "nodeType": "EmitStatement",
                  "src": "587:43:34"
                }
              ]
            },
            "functionSelector": "e0dba60f",
            "id": 8219,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8205,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8204,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4209,
                  "src": "522:9:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "522:9:34"
              }
            ],
            "name": "setController",
            "nameLocation": "467:13:34",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8200,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "489:10:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 8219,
                  "src": "481:18:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8199,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "481:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8202,
                  "mutability": "mutable",
                  "name": "enabled",
                  "nameLocation": "506:7:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 8219,
                  "src": "501:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8201,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "501:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "480:34:34"
            },
            "returnParameters": {
              "id": 8206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "532:0:34"
            },
            "scope": 8220,
            "src": "458:180:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8221,
        "src": "116:525:34",
        "usedErrors": []
      }
    ],
    "src": "33:608:34"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/utils/Controllable.sol",
    "exportedSymbols": {
      "Context": [
        5562
      ],
      "Controllable": [
        8220
      ],
      "Ownable": [
        4266
      ]
    },
    "id": 8221,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8173,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:34"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 8174,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8221,
        "sourceUnit": 4267,
        "src": "60:52:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8175,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4266,
              "src": "141:7:34"
            },
            "id": 8176,
            "nodeType": "InheritanceSpecifier",
            "src": "141:7:34"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8220,
        "linearizedBaseContracts": [
          8220,
          4266,
          5562
        ],
        "name": "Controllable",
        "nameLocation": "125:12:34",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "da8c229e",
            "id": 8180,
            "mutability": "mutable",
            "name": "controllers",
            "nameLocation": "188:11:34",
            "nodeType": "VariableDeclaration",
            "scope": 8220,
            "src": "156:43:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 8179,
              "keyType": {
                "id": 8177,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "164:7:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "156:24:34",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 8178,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "175:4:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 8186,
            "name": "ControllerChanged",
            "nameLocation": "214:17:34",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8182,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "248:10:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 8186,
                  "src": "232:26:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "232:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8184,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "enabled",
                  "nameLocation": "265:7:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 8186,
                  "src": "260:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8183,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "231:42:34"
            },
            "src": "208:66:34"
          },
          {
            "body": {
              "id": 8197,
              "nodeType": "Block",
              "src": "306:144:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 8189,
                          "name": "controllers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8180,
                          "src": "339:11:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 8192,
                        "indexExpression": {
                          "expression": {
                            "id": 8190,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "351:3:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "351:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "339:23:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e74726f6c6c61626c653a2043616c6c6572206973206e6f74206120636f6e74726f6c6c6572",
                        "id": 8193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "377:42:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a494915be969f0305371ebdb09944c6f39346fa8227994f38a7231f6aafbd7b",
                          "typeString": "literal_string \"Controllable: Caller is not a controller\""
                        },
                        "value": "Controllable: Caller is not a controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a494915be969f0305371ebdb09944c6f39346fa8227994f38a7231f6aafbd7b",
                          "typeString": "literal_string \"Controllable: Caller is not a controller\""
                        }
                      ],
                      "id": 8188,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "317:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "317:113:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8195,
                  "nodeType": "ExpressionStatement",
                  "src": "317:113:34"
                },
                {
                  "id": 8196,
                  "nodeType": "PlaceholderStatement",
                  "src": "441:1:34"
                }
              ]
            },
            "id": 8198,
            "name": "onlyController",
            "nameLocation": "291:14:34",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 8187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "306:0:34"
            },
            "src": "282:168:34",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8218,
              "nodeType": "Block",
              "src": "532:106:34",
              "statements": [
                {
                  "expression": {
                    "id": 8211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8207,
                        "name": "controllers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8180,
                        "src": "543:11:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 8209,
                      "indexExpression": {
                        "id": 8208,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8200,
                        "src": "555:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "543:23:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8210,
                      "name": "enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8202,
                      "src": "569:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "543:33:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8212,
                  "nodeType": "ExpressionStatement",
                  "src": "543:33:34"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8214,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8200,
                        "src": "610:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8215,
                        "name": "enabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8202,
                        "src": "622:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8213,
                      "name": "ControllerChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8186,
                      "src": "592:17:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 8216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "592:38:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8217,
                  "nodeType": "EmitStatement",
                  "src": "587:43:34"
                }
              ]
            },
            "functionSelector": "e0dba60f",
            "id": 8219,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8205,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8204,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4209,
                  "src": "522:9:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "522:9:34"
              }
            ],
            "name": "setController",
            "nameLocation": "467:13:34",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8200,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "489:10:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 8219,
                  "src": "481:18:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8199,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "481:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8202,
                  "mutability": "mutable",
                  "name": "enabled",
                  "nameLocation": "506:7:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 8219,
                  "src": "501:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8201,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "501:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "480:34:34"
            },
            "returnParameters": {
              "id": 8206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "532:0:34"
            },
            "scope": 8220,
            "src": "458:180:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8221,
        "src": "116:525:34",
        "usedErrors": []
      }
    ],
    "src": "33:608:34"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-09-29T18:20:47.441Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}