{
  "contractName": "BaseRegistrar",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "controller",
          "type": "address"
        }
      ],
      "name": "ControllerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "controller",
          "type": "address"
        }
      ],
      "name": "ControllerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "NameMigrated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "NameRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseNode",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "controllers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ens",
      "outputs": [
        {
          "internalType": "contract ENS",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        }
      ],
      "name": "addController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        }
      ],
      "name": "removeController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "resolver",
          "type": "address"
        }
      ],
      "name": "setResolver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "available",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "reclaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"ControllerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"ControllerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"NameMigrated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"NameRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"available\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseNode\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ens\",\"outputs\":[{\"internalType\":\"contract ENS\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"reclaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"removeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"setResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"reclaim(uint256,address)\":{\"details\":\"Reclaim ownership of a name in ENS, if you own it in the registrar.\"},\"register(uint256,address)\":{\"details\":\"Register a name.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/abstract_contracts/BaseRegistrar.sol\":\"BaseRegistrar\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"project:/contracts/abstract_contracts/BaseRegistrar.sol\":{\"keccak256\":\"0xb006bd71986c72f37fdf518867041d7d2dc9f207699af0d06ef41c2a0a67eaeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad82a79e9efe837882d7fe195d78055525f43b7253451ba81b9bdfea3d310304\",\"dweb:/ipfs/QmUvU2J6GVympzk961osqqvBqw4nhUZRfkb7MCbwHBabio\"]},\"project:/contracts/interfaces/ENS.sol\":{\"keccak256\":\"0x01da871d4fe90ea4634f60fdf2b830ba418628c7a0c02df8999bb8700a132f23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85c5d598c2fc0001392978a9f7e1edf5db4b685d83b8ccb75935990396b93f5d\",\"dweb:/ipfs/QmWBdzbxrhG4kC4zBobgMCBKXqTRhWRZBWa2YNi6YVgtNL\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"../interfaces/ENS.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\nabstract contract BaseRegistrar is Ownable, IERC721 {\r\n\r\n    event ControllerAdded(address indexed controller);\r\n    event ControllerRemoved(address indexed controller);\r\n    event NameMigrated(uint256 indexed id, address indexed owner);\r\n    event NameRegistered(uint256 indexed id, address indexed owner);\r\n\r\n    // The ENS registry\r\n    ENS public ens;\r\n\r\n    // The namehash of the TLD this registrar owns (eg, .eth)\r\n    bytes32 public baseNode;\r\n\r\n    // A map of addresses that are authorised to register and renew names.\r\n    mapping(address=>bool) public controllers;\r\n\r\n    // Authorises a controller, who can register and renew domains.\r\n    function addController(address controller) virtual external;\r\n\r\n    // Revoke controller permission for an address.\r\n    function removeController(address controller) virtual external;\r\n\r\n    // Set the resolver for the TLD this registrar manages.\r\n    function setResolver(address resolver) virtual external;\r\n\r\n    // Returns true iff the specified name is available for registration.\r\n    function available(uint256 id) virtual public view returns(bool);\r\n\r\n    /**\r\n     * @dev Register a name.\r\n     */\r\n    function register(uint256 id, address owner) virtual external;\r\n\r\n    /**\r\n     * @dev Reclaim ownership of a name in ENS, if you own it in the registrar.\r\n     */\r\n    function reclaim(uint256 id, address owner) virtual external;\r\n}\r\n",
  "sourcePath": "/Users/adrienvinches/Documents/domains/smart_contracts_core/contracts/abstract_contracts/BaseRegistrar.sol",
  "ast": {
    "absolutePath": "project:/contracts/abstract_contracts/BaseRegistrar.sol",
    "exportedSymbols": {
      "BaseRegistrar": [
        8119
      ],
      "Context": [
        5562
      ],
      "ENS": [
        8266
      ],
      "IERC165": [
        5801
      ],
      "IERC721": [
        5198
      ],
      "Ownable": [
        4266
      ]
    },
    "id": 8120,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8044,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:30"
      },
      {
        "absolutePath": "project:/contracts/interfaces/ENS.sol",
        "file": "../interfaces/ENS.sol",
        "id": 8045,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8120,
        "sourceUnit": 8267,
        "src": "60:31:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 8046,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8120,
        "sourceUnit": 5199,
        "src": "93:58:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 8047,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8120,
        "sourceUnit": 4267,
        "src": "153:52:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 8048,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4266,
              "src": "244:7:30"
            },
            "id": 8049,
            "nodeType": "InheritanceSpecifier",
            "src": "244:7:30"
          },
          {
            "baseName": {
              "id": 8050,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5198,
              "src": "253:7:30"
            },
            "id": 8051,
            "nodeType": "InheritanceSpecifier",
            "src": "253:7:30"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 8119,
        "linearizedBaseContracts": [
          8119,
          5198,
          5801,
          4266,
          5562
        ],
        "name": "BaseRegistrar",
        "nameLocation": "227:13:30",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 8055,
            "name": "ControllerAdded",
            "nameLocation": "276:15:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8053,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "308:10:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8055,
                  "src": "292:26:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8052,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "292:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "291:28:30"
            },
            "src": "270:50:30"
          },
          {
            "anonymous": false,
            "id": 8059,
            "name": "ControllerRemoved",
            "nameLocation": "332:17:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8057,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "366:10:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8059,
                  "src": "350:26:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8056,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "350:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "349:28:30"
            },
            "src": "326:52:30"
          },
          {
            "anonymous": false,
            "id": 8065,
            "name": "NameMigrated",
            "nameLocation": "390:12:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8061,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "419:2:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8065,
                  "src": "403:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8060,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8063,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "439:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8065,
                  "src": "423:21:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "402:43:30"
            },
            "src": "384:62:30"
          },
          {
            "anonymous": false,
            "id": 8071,
            "name": "NameRegistered",
            "nameLocation": "458:14:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8067,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "489:2:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8071,
                  "src": "473:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8066,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "473:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8069,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "509:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8071,
                  "src": "493:21:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8068,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "493:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "472:43:30"
            },
            "src": "452:64:30"
          },
          {
            "constant": false,
            "functionSelector": "3f15457f",
            "id": 8074,
            "mutability": "mutable",
            "name": "ens",
            "nameLocation": "560:3:30",
            "nodeType": "VariableDeclaration",
            "scope": 8119,
            "src": "549:14:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ENS_$8266",
              "typeString": "contract ENS"
            },
            "typeName": {
              "id": 8073,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8072,
                "name": "ENS",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8266,
                "src": "549:3:30"
              },
              "referencedDeclaration": 8266,
              "src": "549:3:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ENS_$8266",
                "typeString": "contract ENS"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ddf7fcb0",
            "id": 8076,
            "mutability": "mutable",
            "name": "baseNode",
            "nameLocation": "650:8:30",
            "nodeType": "VariableDeclaration",
            "scope": 8119,
            "src": "635:23:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 8075,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "635:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "da8c229e",
            "id": 8080,
            "mutability": "mutable",
            "name": "controllers",
            "nameLocation": "773:11:30",
            "nodeType": "VariableDeclaration",
            "scope": 8119,
            "src": "743:41:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 8079,
              "keyType": {
                "id": 8077,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "751:7:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "743:22:30",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 8078,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "760:4:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "functionSelector": "a7fc7a07",
            "id": 8085,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addController",
            "nameLocation": "871:13:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8082,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "893:10:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8085,
                  "src": "885:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8081,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "884:20:30"
            },
            "returnParameters": {
              "id": 8084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "921:0:30"
            },
            "scope": 8119,
            "src": "862:60:30",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "functionSelector": "f6a74ed7",
            "id": 8090,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeController",
            "nameLocation": "992:16:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8087,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "1017:10:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8090,
                  "src": "1009:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1009:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1008:20:30"
            },
            "returnParameters": {
              "id": 8089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1045:0:30"
            },
            "scope": 8119,
            "src": "983:63:30",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "functionSelector": "4e543b26",
            "id": 8095,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setResolver",
            "nameLocation": "1124:11:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8092,
                  "mutability": "mutable",
                  "name": "resolver",
                  "nameLocation": "1144:8:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8095,
                  "src": "1136:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8091,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1136:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1135:18:30"
            },
            "returnParameters": {
              "id": 8094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1170:0:30"
            },
            "scope": 8119,
            "src": "1115:56:30",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "functionSelector": "96e494e8",
            "id": 8102,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "available",
            "nameLocation": "1263:9:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8097,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1281:2:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8102,
                  "src": "1273:10:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8096,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1273:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1272:12:30"
            },
            "returnParameters": {
              "id": 8101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8100,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8102,
                  "src": "1313:4:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8099,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1313:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1312:6:30"
            },
            "scope": 8119,
            "src": "1254:65:30",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 8103,
              "nodeType": "StructuredDocumentation",
              "src": "1327:42:30",
              "text": " @dev Register a name."
            },
            "functionSelector": "dbbdf083",
            "id": 8110,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nameLocation": "1384:8:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8105,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1401:2:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8110,
                  "src": "1393:10:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1393:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8107,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1413:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8110,
                  "src": "1405:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1405:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1392:27:30"
            },
            "returnParameters": {
              "id": 8109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1436:0:30"
            },
            "scope": 8119,
            "src": "1375:62:30",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8111,
              "nodeType": "StructuredDocumentation",
              "src": "1445:93:30",
              "text": " @dev Reclaim ownership of a name in ENS, if you own it in the registrar."
            },
            "functionSelector": "28ed4f6c",
            "id": 8118,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "reclaim",
            "nameLocation": "1553:7:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8113,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1569:2:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8118,
                  "src": "1561:10:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1561:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8115,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1581:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8118,
                  "src": "1573:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1573:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1560:27:30"
            },
            "returnParameters": {
              "id": 8117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1604:0:30"
            },
            "scope": 8119,
            "src": "1544:61:30",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 8120,
        "src": "209:1399:30",
        "usedErrors": []
      }
    ],
    "src": "33:1577:30"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/abstract_contracts/BaseRegistrar.sol",
    "exportedSymbols": {
      "BaseRegistrar": [
        8119
      ],
      "Context": [
        5562
      ],
      "ENS": [
        8266
      ],
      "IERC165": [
        5801
      ],
      "IERC721": [
        5198
      ],
      "Ownable": [
        4266
      ]
    },
    "id": 8120,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8044,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:30"
      },
      {
        "absolutePath": "project:/contracts/interfaces/ENS.sol",
        "file": "../interfaces/ENS.sol",
        "id": 8045,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8120,
        "sourceUnit": 8267,
        "src": "60:31:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 8046,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8120,
        "sourceUnit": 5199,
        "src": "93:58:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 8047,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8120,
        "sourceUnit": 4267,
        "src": "153:52:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 8048,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4266,
              "src": "244:7:30"
            },
            "id": 8049,
            "nodeType": "InheritanceSpecifier",
            "src": "244:7:30"
          },
          {
            "baseName": {
              "id": 8050,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5198,
              "src": "253:7:30"
            },
            "id": 8051,
            "nodeType": "InheritanceSpecifier",
            "src": "253:7:30"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 8119,
        "linearizedBaseContracts": [
          8119,
          5198,
          5801,
          4266,
          5562
        ],
        "name": "BaseRegistrar",
        "nameLocation": "227:13:30",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 8055,
            "name": "ControllerAdded",
            "nameLocation": "276:15:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8053,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "308:10:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8055,
                  "src": "292:26:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8052,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "292:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "291:28:30"
            },
            "src": "270:50:30"
          },
          {
            "anonymous": false,
            "id": 8059,
            "name": "ControllerRemoved",
            "nameLocation": "332:17:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8057,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "366:10:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8059,
                  "src": "350:26:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8056,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "350:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "349:28:30"
            },
            "src": "326:52:30"
          },
          {
            "anonymous": false,
            "id": 8065,
            "name": "NameMigrated",
            "nameLocation": "390:12:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8061,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "419:2:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8065,
                  "src": "403:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8060,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8063,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "439:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8065,
                  "src": "423:21:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "402:43:30"
            },
            "src": "384:62:30"
          },
          {
            "anonymous": false,
            "id": 8071,
            "name": "NameRegistered",
            "nameLocation": "458:14:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8067,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "489:2:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8071,
                  "src": "473:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8066,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "473:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8069,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "509:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8071,
                  "src": "493:21:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8068,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "493:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "472:43:30"
            },
            "src": "452:64:30"
          },
          {
            "constant": false,
            "functionSelector": "3f15457f",
            "id": 8074,
            "mutability": "mutable",
            "name": "ens",
            "nameLocation": "560:3:30",
            "nodeType": "VariableDeclaration",
            "scope": 8119,
            "src": "549:14:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ENS_$8266",
              "typeString": "contract ENS"
            },
            "typeName": {
              "id": 8073,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8072,
                "name": "ENS",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8266,
                "src": "549:3:30"
              },
              "referencedDeclaration": 8266,
              "src": "549:3:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ENS_$8266",
                "typeString": "contract ENS"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ddf7fcb0",
            "id": 8076,
            "mutability": "mutable",
            "name": "baseNode",
            "nameLocation": "650:8:30",
            "nodeType": "VariableDeclaration",
            "scope": 8119,
            "src": "635:23:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 8075,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "635:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "da8c229e",
            "id": 8080,
            "mutability": "mutable",
            "name": "controllers",
            "nameLocation": "773:11:30",
            "nodeType": "VariableDeclaration",
            "scope": 8119,
            "src": "743:41:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 8079,
              "keyType": {
                "id": 8077,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "751:7:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "743:22:30",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 8078,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "760:4:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "functionSelector": "a7fc7a07",
            "id": 8085,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addController",
            "nameLocation": "871:13:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8082,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "893:10:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8085,
                  "src": "885:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8081,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "884:20:30"
            },
            "returnParameters": {
              "id": 8084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "921:0:30"
            },
            "scope": 8119,
            "src": "862:60:30",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "functionSelector": "f6a74ed7",
            "id": 8090,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeController",
            "nameLocation": "992:16:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8087,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "1017:10:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8090,
                  "src": "1009:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1009:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1008:20:30"
            },
            "returnParameters": {
              "id": 8089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1045:0:30"
            },
            "scope": 8119,
            "src": "983:63:30",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "functionSelector": "4e543b26",
            "id": 8095,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setResolver",
            "nameLocation": "1124:11:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8092,
                  "mutability": "mutable",
                  "name": "resolver",
                  "nameLocation": "1144:8:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8095,
                  "src": "1136:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8091,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1136:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1135:18:30"
            },
            "returnParameters": {
              "id": 8094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1170:0:30"
            },
            "scope": 8119,
            "src": "1115:56:30",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "functionSelector": "96e494e8",
            "id": 8102,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "available",
            "nameLocation": "1263:9:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8097,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1281:2:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8102,
                  "src": "1273:10:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8096,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1273:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1272:12:30"
            },
            "returnParameters": {
              "id": 8101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8100,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8102,
                  "src": "1313:4:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8099,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1313:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1312:6:30"
            },
            "scope": 8119,
            "src": "1254:65:30",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 8103,
              "nodeType": "StructuredDocumentation",
              "src": "1327:42:30",
              "text": " @dev Register a name."
            },
            "functionSelector": "dbbdf083",
            "id": 8110,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nameLocation": "1384:8:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8105,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1401:2:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8110,
                  "src": "1393:10:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1393:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8107,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1413:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8110,
                  "src": "1405:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1405:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1392:27:30"
            },
            "returnParameters": {
              "id": 8109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1436:0:30"
            },
            "scope": 8119,
            "src": "1375:62:30",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8111,
              "nodeType": "StructuredDocumentation",
              "src": "1445:93:30",
              "text": " @dev Reclaim ownership of a name in ENS, if you own it in the registrar."
            },
            "functionSelector": "28ed4f6c",
            "id": 8118,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "reclaim",
            "nameLocation": "1553:7:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8113,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1569:2:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8118,
                  "src": "1561:10:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1561:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8115,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1581:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 8118,
                  "src": "1573:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1573:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1560:27:30"
            },
            "returnParameters": {
              "id": 8117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1604:0:30"
            },
            "scope": 8119,
            "src": "1544:61:30",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 8120,
        "src": "209:1399:30",
        "usedErrors": []
      }
    ],
    "src": "33:1577:30"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2023-10-10T04:30:26.110Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the number of tokens in ``owner``'s account."
      },
      "getApproved(uint256)": {
        "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "isApprovedForAll(address,address)": {
        "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "reclaim(uint256,address)": {
        "details": "Reclaim ownership of a name in ENS, if you own it in the registrar."
      },
      "register(uint256,address)": {
        "details": "Register a name."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
      },
      "setApprovalForAll(address,bool)": {
        "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
      },
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}